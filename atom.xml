<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>网虫</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-12-18T01:44:37.171Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>jixinlo</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>window下多个python版本共存</title>
    <link href="http://yoursite.com/2016/12/15/window%E4%B8%8B%E5%A4%9A%E4%B8%AApython%E7%89%88%E6%9C%AC%E5%85%B1%E5%AD%98/"/>
    <id>http://yoursite.com/2016/12/15/window下多个python版本共存/</id>
    <published>2016-12-15T12:40:28.000Z</published>
    <updated>2016-12-18T01:44:37.171Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、源程序安装"><a href="#一、源程序安装" class="headerlink" title="一、源程序安装"></a>一、源程序安装</h1><h2 id="1、安装你需要的两个不同版本的python"><a href="#1、安装你需要的两个不同版本的python" class="headerlink" title="1、安装你需要的两个不同版本的python"></a>1、安装你需要的两个不同版本的python</h2><ul>
<li>这里我安装的是2.7和3.4的版本，自己的笔记本(win7系统)安装3.5版本总是失败。</li>
<li>尽量文件夹为C盘下的python27和python34</li>
</ul>
<h2 id="2、增加环境变量"><a href="#2、增加环境变量" class="headerlink" title="2、增加环境变量"></a>2、增加环境变量</h2><ul>
<li>c:\Python27      c:\Python27\Scripts</li>
<li>c:\Python34      c:\Python34\Scripts</li>
</ul>
<h2 id="3、修改启动文件名，"><a href="#3、修改启动文件名，" class="headerlink" title="3、修改启动文件名，"></a>3、修改启动文件名，</h2><ul>
<li>因为我选择Python3作为我的主要开发环境。所以，我修改Python27安装目录下的python.exe和pythonw.exe分别为python3.exe和pythonw3.exe。这样使用命令python我们使用的是3版本的Python，而使用Python2则使用的是2.7版本的Python</li>
</ul>
<h2 id="4、pip问题"><a href="#4、pip问题" class="headerlink" title="4、pip问题"></a>4、pip问题</h2><ul>
<li>使用pip进行软件包安装的时候，对于Python3仍然使用pip install XXX，而对于Python2则需要使用python2 -m pip install XXX的形式进行安装。</li>
</ul>
<h1 id="二、sublime-text下共存两个python版本"><a href="#二、sublime-text下共存两个python版本" class="headerlink" title="二、sublime text下共存两个python版本"></a>二、sublime text下共存两个python版本</h1><h2 id="1、可以新建一个-Build-System"><a href="#1、可以新建一个-Build-System" class="headerlink" title="1、可以新建一个 Build System"></a>1、可以新建一个 Build System</h2><ul>
<li>点击 Tools -&gt; Build System -&gt; New Build System…，会弹出一个编辑界面，在这个界面里面可以写出你的自定义构建系统。</li>
<li><p>修改代码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"> &#123;</div><div class="line">    &quot;shell_cmd&quot;: &quot;python2 -u \&quot;$file\&quot;&quot;,</div><div class="line">    &quot;file_regex&quot;: &quot;^[ ]*File \&quot;(...*?)\&quot;, line ([0-9]*)&quot;,</div><div class="line">    &quot;selector&quot;: &quot;source.python&quot;,</div><div class="line"></div><div class="line">    &quot;env&quot;: &#123;&quot;PYTHONIOENCODING&quot;: &quot;utf-8&quot;&#125;,</div><div class="line"></div><div class="line">    &quot;variants&quot;:</div><div class="line">    [</div><div class="line">        &#123;</div><div class="line">            &quot;name&quot;: &quot;Syntax Check&quot;,</div><div class="line">            &quot;shell_cmd&quot;: &quot;python -m py_compile \&quot;$&#123;file&#125;\&quot;&quot;,</div><div class="line">        &#125;</div><div class="line">    ]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>保存为python2</li>
</ul>
</li>
</ul>
<h2 id="2、在你的代码处把构建系统改为你自己写的（点击-Tools-gt-Build-System-gt-），之后就能通过快捷键-Ctrl-B-来使用你自定义的解释器。"><a href="#2、在你的代码处把构建系统改为你自己写的（点击-Tools-gt-Build-System-gt-），之后就能通过快捷键-Ctrl-B-来使用你自定义的解释器。" class="headerlink" title="2、在你的代码处把构建系统改为你自己写的（点击 Tools -&gt; Build System -&gt; **），之后就能通过快捷键 Ctrl+B 来使用你自定义的解释器。"></a>2、在你的代码处把构建系统改为你自己写的（点击 Tools -&gt; Build System -&gt; **），之后就能通过快捷键 Ctrl+B 来使用你自定义的解释器。</h2>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一、源程序安装&quot;&gt;&lt;a href=&quot;#一、源程序安装&quot; class=&quot;headerlink&quot; title=&quot;一、源程序安装&quot;&gt;&lt;/a&gt;一、源程序安装&lt;/h1&gt;&lt;h2 id=&quot;1、安装你需要的两个不同版本的python&quot;&gt;&lt;a href=&quot;#1、安装你需要的两个不同
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>python学习书籍</title>
    <link href="http://yoursite.com/2016/12/14/python%E5%AD%A6%E4%B9%A0%E4%B9%A6%E7%B1%8D/"/>
    <id>http://yoursite.com/2016/12/14/python学习书籍/</id>
    <published>2016-12-14T03:17:22.000Z</published>
    <updated>2016-12-14T03:19:19.910Z</updated>
    
    <content type="html"><![CDATA[<h1 id="《Python简明教程》"><a href="#《Python简明教程》" class="headerlink" title="《Python简明教程》"></a>《Python简明教程》</h1><p>让人快速的对 Python 知识有个全局概览，关键字、循环分支、异常、基本数据结构都提到了，学习一门新语言，掌握这些知识已经完全可以写基本程序了。</p>
<h1 id="《-Dive-Into-Python》"><a href="#《-Dive-Into-Python》" class="headerlink" title="《 Dive Into Python》"></a>《 Dive Into Python》</h1><p>正则表达式那一章节，正是我工作需要的，对我当时帮助很多。</p>
<p>#《Python学习笔记》<br>在我了解 Python 之后去看它，可能提到了一些我初学时疏忽的知识点，所以让我对它非常有好感。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;《Python简明教程》&quot;&gt;&lt;a href=&quot;#《Python简明教程》&quot; class=&quot;headerlink&quot; title=&quot;《Python简明教程》&quot;&gt;&lt;/a&gt;《Python简明教程》&lt;/h1&gt;&lt;p&gt;让人快速的对 Python 知识有个全局概览，关键字、循环分
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
  </entry>
  
  <entry>
    <title>前端</title>
    <link href="http://yoursite.com/2016/12/11/%E5%89%8D%E7%AB%AF/"/>
    <id>http://yoursite.com/2016/12/11/前端/</id>
    <published>2016-12-11T13:03:34.000Z</published>
    <updated>2016-12-11T13:03:58.569Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>node入门</title>
    <link href="http://yoursite.com/2016/12/11/node%E5%85%A5%E9%97%A8/"/>
    <id>http://yoursite.com/2016/12/11/node入门/</id>
    <published>2016-12-11T06:39:26.000Z</published>
    <updated>2016-12-11T13:06:12.829Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Node服务器端开发第一天"><a href="#Node服务器端开发第一天" class="headerlink" title="Node服务器端开发第一天"></a>Node服务器端开发第一天</h1><blockquote>
<p>Node简介及配置、快速上手、核心特点、模块化</p>
</blockquote>
<h2 id="一、Node简介"><a href="#一、Node简介" class="headerlink" title="一、Node简介"></a>一、Node简介</h2><h3 id="1、客户端的JavaScript是怎样的"><a href="#1、客户端的JavaScript是怎样的" class="headerlink" title="1、客户端的JavaScript是怎样的"></a>1、客户端的JavaScript是怎样的</h3><ul>
<li><p>什么是 JavaScript？</p>
<ul>
<li>脚本语言</li>
<li>运行在浏览器中</li>
<li>一般用来做客户端页面的交互（Interactive）</li>
</ul>
</li>
<li><p>JavaScript 的运行环境？</p>
<ul>
<li>是不是运行在浏览器呢？</li>
<li>不够严谨</li>
<li>运行在浏览器内核中的 JS 引擎（engine）</li>
</ul>
</li>
<li><p>浏览器中的 JavaScript 可以做什么？</p>
<ul>
<li>操作DOM（对DOM的增删改、注册事件）</li>
<li>AJAX/跨域</li>
<li>BOM（页面跳转、历史记录、console.log()、alert()）</li>
<li>ECMAScript</li>
</ul>
</li>
<li><p>浏览器中的 JavaScript 不可以做什么？</p>
<ul>
<li>文件操作（文件和文件夹的CRUD）</li>
<li>没有办法操作系统信息</li>
<li>由于运行环境特殊（我们写的代码是在不认识的人的浏览器中运行）</li>
</ul>
</li>
</ul>
<blockquote>
<ul>
<li>在开发人员能力相同的情况下编程语言的能力取决于什么？  （取决于平台）<ul>
<li>-语言本身？<ul>
<li>语言本身只是提供定义变量，定义函数，定义类型，流程控制，循环结构之类的操作</li>
</ul>
</li>
<li>应该取决于运行该语言的平台（环境提供的接口）</li>
</ul>
</li>
</ul>
<ol>
<li><p>比如对于JS来说，</p>
<ul>
<li>我们常说的JS实际是ES，大部分能力都是由浏览器的执行引擎决定</li>
<li>BOM和DOM可以说是浏览器开放出来的接口</li>
<li>比如：Cordova中提供JS调用摄像头，操作本地文件的API</li>
</ul>
</li>
<li><p>Java和PHP既是语言也是平台</p>
<ul>
<li>Java运行在Java虚拟机（跨操作系统）</li>
<li>PHP既是语言也是平台（跨操作系统）</li>
</ul>
</li>
<li><p>C#语言平台：.NET Framework（Windows）</p>
<ul>
<li>C#可以运行在MONO这样的平台   </li>
<li>因为有人需要将C#运行在Linux平台，所有出现了MONO</li>
</ul>
</li>
</ol>
</blockquote>
<ul>
<li>JavaScript 只可以运行在浏览器中吗？<ul>
<li>不是</li>
<li>一般情况下一种语言运行在一种平台上</li>
<li>能运行在哪取决于，这个环境有没有特定平台</li>
</ul>
</li>
</ul>
<h3 id="2、什么是Node"><a href="#2、什么是Node" class="headerlink" title="2、什么是Node"></a>2、什么是Node</h3><ul>
<li>Node 就是 JavaScript 语言在服务器端的运行环境</li>
<li>所谓“运行环境（平台）”有两层意思：<ul>
<li>首先，JavaScript 语言通过 Node 在服务器运行，在这个意义上，Node 有点像 JavaScript 虚拟机；</li>
<li>其次，Node 提供大量工具库，使得 JavaScript 语言与操作系统互动（比如读写文件、新建子进程），在这个意义上， Node 又是 JavaScript 的工具库。</li>
</ul>
</li>
<li><p>组成部分</p>
<ul>
<li>V8：     解析ECMA</li>
<li>libuv：   各种工具<br>+（知识点：Java/虚拟机平台   C#/.net平台   js/node平台）</li>
</ul>
</li>
<li><p>Node的实现结构</p>
<ul>
<li>v8解析传入的js文件，调用libuv库，进而操作系统</li>
</ul>
</li>
</ul>
<blockquote>
<ul>
<li><p>为什么是JavaScript</p>
<ul>
<li>js的用的人最多</li>
<li>注意：是node选择了js，而不是js发展成了node</li>
</ul>
</li>
<li><p>Node在当下Web开发领域的应用</p>
<ul>
<li>做网站：处理请求和返回相应    -&gt;整体开发</li>
<li>node分发：根据请求调用后台接口，然后渲染HTML    -&gt;中间层 （天猫）</li>
</ul>
</li>
</ul>
</blockquote>
<h3 id="3、重点理解"><a href="#3、重点理解" class="headerlink" title="3、重点理解"></a>3、重点理解</h3><ul>
<li>Node是一个JavaScript的运行环境（平台），不是一门语言，也不是JavaScript的框架；</li>
<li>Node的实现结构；</li>
<li>Node可以用来开发服务端应用程序，Web系统；</li>
<li>基于Node的前端工具集</li>
</ul>
<hr>
<h2 id="二、环境配置"><a href="#二、环境配置" class="headerlink" title="二、环境配置"></a>二、环境配置</h2><h3 id="1、安装包的方式安装"><a href="#1、安装包的方式安装" class="headerlink" title="1、安装包的方式安装"></a>1、安装包的方式安装</h3><ul>
<li>安装包下载链接：<ul>
<li>Mac OSX： <a href="http://npm.taobao.org/mirrors/node/v5.7.0/node-v5.7.0.pkg" target="_blank" rel="external">darwin</a></li>
<li>Windows：<ul>
<li><a href="http://npm.taobao.org/mirrors/node/v5.7.0/node-v5.7.0-x64.msi" target="_blank" rel="external">x64</a></li>
<li><a href="http://npm.taobao.org/mirrors/node/v5.7.0/node-v5.7.0-x86.msi" target="_blank" rel="external">x86</a></li>
</ul>
</li>
</ul>
</li>
<li>安装操作：<ul>
<li>一路<em>Next</em></li>
</ul>
</li>
</ul>
<blockquote>
<h3 id="更新版本"><a href="#更新版本" class="headerlink" title="更新版本"></a>更新版本</h3><ul>
<li>操作方式：<ul>
<li>重新下载最新的安装包；</li>
<li>覆盖安装即可；</li>
</ul>
</li>
<li>问题：<ul>
<li>以前版本安装的很多全局的工具包需要重新安装</li>
<li>无法回滚到之前的版本</li>
<li>无法在多个版本之间切换（很多时候我们要使用特定版本）</li>
</ul>
</li>
</ul>
</blockquote>
<h3 id="2、NVM工具的使用"><a href="#2、NVM工具的使用" class="headerlink" title="2、NVM工具的使用"></a>2、NVM工具的使用</h3><blockquote>
<p>Node Version Manager（Node版本管理工具）</p>
</blockquote>
<p>由于以后的开发工作可能会在多个Node版本中测试，而且Node的版本也比较多，所以需要这么款工具来管理</p>
<h4 id="安装操作步骤"><a href="#安装操作步骤" class="headerlink" title="安装操作步骤"></a>安装操作步骤</h4><ol>
<li>下载：<a href="https://github.com/coreybutler/nvm-windows/releases/download/1.1.0/nvm-noinstall.zip" target="_blank" rel="external">nvm-windows</a></li>
<li>解压到一个全英文路径</li>
<li><p>编辑解压目录下的<code>settings.txt</code>文件（不存在则新建）</p>
<ul>
<li><code>root 配置为当前 nvm.exe 所在目录</code></li>
<li><code>path 配置为 node 快捷方式所在的目录</code></li>
<li><code>arch 配置为当前操作系统的位数（32/64）</code></li>
<li><code>proxy 不用配置</code></li>
</ul>
</li>
<li><p>配置环境变量 可以通过 window+r  : sysdm.cpl</p>
<ul>
<li><code>NVM_HOME = 当前 nvm.exe 所在目录</code></li>
<li><code>NVM_SYMLINK = node 快捷方式所在的目录</code></li>
<li><code>PATH += %NVM_HOME%;%NVM_SYMLINK%;</code></li>
<li>打开CMD通过<code>set [name]</code>命令查看环境变量是否配置成功</li>
<li>PowerShell中是通过<code>dir env:[name]</code>命令</li>
</ul>
</li>
<li><p>NVM使用说明：</p>
<ul>
<li><a href="https://github.com/coreybutler/nvm-windows/" target="_blank" rel="external">https://github.com/coreybutler/nvm-windows/</a></li>
</ul>
</li>
<li><p>NPM的目录之后使用再配置</p>
</li>
</ol>
<blockquote>
<h3 id="环境变量的概念"><a href="#环境变量的概念" class="headerlink" title="环境变量的概念"></a>环境变量的概念</h3><p> 环境变量就是操作系统提供的系统级别用于存储变量的地方</p>
<ol>
<li>打开：在运行中输入sysdm.cpl打开系统属性（或我的电脑右击）</li>
<li>定义：运行程序而没有告诉完整路径时  本目录&gt;系统变量（故添加环境变量可以在任何目录打开）</li>
<li>安装方式<ul>
<li>A：直接在path变量值中加入地址</li>
<li>B：现在外部定义变量，然后在path值中使用%%引用变量值</li>
</ul>
</li>
<li>注意<ul>
<li>环境变量的变量名是不区分大小写的</li>
<li>PATH 变量：只要添加到 PATH 变量中的路径，都可以在任何目录下搜索</li>
</ul>
</li>
</ol>
<h3 id="Windows下常用的命令行操作"><a href="#Windows下常用的命令行操作" class="headerlink" title="Windows下常用的命令行操作"></a>Windows下常用的命令行操作</h3><pre><code>- cd(change directory):  切换目录
- md(made directory):    创建目录
- rd(remove directory):  删除目录
- del                    删除指定文件
- dir:                   列出目录内容
- cls(clear screen):     清屏
</code></pre></blockquote>
<hr>
<h2 id="快速上手"><a href="#快速上手" class="headerlink" title="快速上手"></a>快速上手</h2><hr>
<h2 id="事件驱动和非阻塞"><a href="#事件驱动和非阻塞" class="headerlink" title="事件驱动和非阻塞"></a>事件驱动和非阻塞</h2><hr>
<h2 id="模块化开发"><a href="#模块化开发" class="headerlink" title="模块化开发"></a>模块化开发</h2>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Node服务器端开发第一天&quot;&gt;&lt;a href=&quot;#Node服务器端开发第一天&quot; class=&quot;headerlink&quot; title=&quot;Node服务器端开发第一天&quot;&gt;&lt;/a&gt;Node服务器端开发第一天&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;Node简介及配置、快速上
    
    </summary>
    
      <category term="Node" scheme="http://yoursite.com/categories/Node/"/>
    
    
  </entry>
  
  <entry>
    <title>markdown入门</title>
    <link href="http://yoursite.com/2016/12/11/markdown%E5%85%A5%E9%97%A8/"/>
    <id>http://yoursite.com/2016/12/11/markdown入门/</id>
    <published>2016-12-11T06:38:21.000Z</published>
    <updated>2016-12-12T02:10:17.084Z</updated>
    
    <content type="html"><![CDATA[<h1 id="markdown入门"><a href="#markdown入门" class="headerlink" title="markdown入门"></a>markdown入门</h1><h2 id="一、简介"><a href="#一、简介" class="headerlink" title="一、简介"></a>一、简介</h2><p>Markdown 的目标是实现「易读易写」<br>成为一种适用于网络的书写语言</p>
<blockquote>
<p>Markdown 不是想要取代 HTML，HTML 是一种发布的格式，Markdown 是一种书写的格式</p>
</blockquote>
<h2 id="二、版本"><a href="#二、版本" class="headerlink" title="二、版本"></a>二、版本</h2><p>Markdown还有一系列衍生版本，用于扩展Markdown的功能（如表格、脚注、内嵌HTML等等），在语法上基本兼容，但在细节上也有改动。</p>
<ol>
<li>基于工具，如Pandoc。</li>
<li>基于网站，如GitHub和Wikipedia。</li>
</ol>
<blockquote>
<p>本文的版本基于github</p>
</blockquote>
<h2 id="三、语法"><a href="#三、语法" class="headerlink" title="三、语法"></a>三、语法</h2><h4 id="1-标题：-（1到6个；-前面不能有空格）"><a href="#1-标题：-（1到6个；-前面不能有空格）" class="headerlink" title="1. 标题：# （1到6个；#前面不能有空格）"></a>1. 标题：# （1到6个；#前面不能有空格）</h4><blockquote>
<p>##标题</p>
<p>###标题</p>
</blockquote>
<h4 id="2-换行：补两个空格或空一行-（回车无效）"><a href="#2-换行：补两个空格或空一行-（回车无效）" class="headerlink" title="2. 换行：补两个空格或空一行  （回车无效）"></a>2. 换行：补两个空格或空一行  （回车无效）</h4><p>  一行<br>  二行</p>
<h4 id="3-横线：—或"><a href="#3-横线：—或" class="headerlink" title="3. 横线：—或*"></a>3. 横线：—或<em>*</em></h4><h2 id=""><a href="#" class="headerlink" title="  *"></a>  <em>*</em></h2><h4 id="4-文本修饰"><a href="#4-文本修饰" class="headerlink" title="4. 文本修饰"></a>4. 文本修饰</h4><ol>
<li>斜体：左右一星;</li>
<li>粗体：左右二星; </li>
<li>粗粗体：左右三星;</li>
<li><p>删除线：两个波浪线;</p>
<p><em>斜体</em><br><strong>粗体</strong><br><strong><em>粗体</em></strong><br><del>波浪线</del></p>
</li>
</ol>
<h4 id="5-文本引用：-gt"><a href="#5-文本引用：-gt" class="headerlink" title="5. 文本引用：&gt;"></a>5. 文本引用：&gt;</h4><blockquote>
<p>文本引用</p>
</blockquote>
<h4 id="6-代码引用：-（注意：上下对齐，不然影响后面。tab键也可以；反引号-英文状态下的tab上面的键）"><a href="#6-代码引用：-（注意：上下对齐，不然影响后面。tab键也可以；反引号-英文状态下的tab上面的键）" class="headerlink" title="6. 代码引用：`` （注意：上下对齐，不然影响后面。tab键也可以；反引号,英文状态下的tab上面的键）"></a>6. 代码引用：`` （注意：上下对齐，不然影响后面。tab键也可以；反引号,英文状态下的tab上面的键）</h4><p>   <code>单行代码</code></p>
   <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">双行代码  </div><div class="line">双行代码</div></pre></td></tr></table></figure>
<h4 id="7-列表：1、-、"><a href="#7-列表：1、-、" class="headerlink" title="7. 列表：1、- 、*"></a>7. 列表：1、- 、*</h4><ul>
<li><p>liebiao  </p>
<ul>
<li>liebiao  </li>
</ul>
<p>-[x] liebiao<br>-[ ] liebiao  </p>
</li>
</ul>
<h4 id="8-表格：表头用中横线，-线分割单元格，冒号表示对齐。（全部是英文符号）"><a href="#8-表格：表头用中横线，-线分割单元格，冒号表示对齐。（全部是英文符号）" class="headerlink" title="8. 表格：表头用中横线，|线分割单元格，冒号表示对齐。（全部是英文符号）"></a>8. 表格：表头用中横线，|线分割单元格，冒号表示对齐。（全部是英文符号）</h4><table>
<thead>
<tr>
<th style="text-align:right">班级</th>
<th style="text-align:right">姓名 </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:right"> 一</td>
<td style="text-align:right">小白</td>
</tr>
<tr>
<td style="text-align:right"> 二</td>
<td style="text-align:right">小尧</td>
</tr>
</tbody>
</table>
<h4 id="9-链接-url-图片：-url"><a href="#9-链接-url-图片：-url" class="headerlink" title="9. 链接: [](url)  ;  图片：![](url)"></a>9. 链接: <code>[](url)</code>  ;  图片：<code>![](url)</code></h4><p>   <a href="www.baidu.com">baidu</a><br>   <img src="http://www.baidu.com/img/bdlogo.gif" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;markdown入门&quot;&gt;&lt;a href=&quot;#markdown入门&quot; class=&quot;headerlink&quot; title=&quot;markdown入门&quot;&gt;&lt;/a&gt;markdown入门&lt;/h1&gt;&lt;h2 id=&quot;一、简介&quot;&gt;&lt;a href=&quot;#一、简介&quot; class=&quot;head
    
    </summary>
    
      <category term="杂谈" scheme="http://yoursite.com/categories/%E6%9D%82%E8%B0%88/"/>
    
    
  </entry>
  
  <entry>
    <title>python入门</title>
    <link href="http://yoursite.com/2016/12/11/python%E5%85%A5%E9%97%A8/"/>
    <id>http://yoursite.com/2016/12/11/python入门/</id>
    <published>2016-12-11T06:36:09.000Z</published>
    <updated>2016-12-12T02:09:40.786Z</updated>
    
    <content type="html"><![CDATA[<h1 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h1><h2 id="一-安装python环境"><a href="#一-安装python环境" class="headerlink" title="一.安装python环境"></a>一.安装python环境</h2><ol>
<li>官网下载，安装；添加环境变量</li>
<li>使用sublime text3，保存为py,使用ctrl+B运行。</li>
</ol>
<h3 id="二-python的两种实现方式："><a href="#二-python的两种实现方式：" class="headerlink" title="二.python的两种实现方式："></a>二.python的两种实现方式：</h3><ol>
<li><p>语句<br> 使用<code>关键词</code>组成命令，告诉python做什么<br> 例子：<code>print &#39;hello print abs(-1)</code></p>
<blockquote>
<p>与%(字符串格式操作符)结合：替换字符<br>与&gt;&gt;(重定向)结合：重定向</p>
</blockquote>
</li>
<li><p>表达式（函数和算术表达式）<br> 使用<code>括号</code>调用的函数；使用<code>数学操作符</code>构成的算术表达式</p>
<p> 例子：<code>print abs(-1)</code></p>
</li>
</ol>
<blockquote>
<p>知识点：书写格式<br>顶头开始写python代码，不然报错</p>
</blockquote>
<h3 id="三-知识点"><a href="#三-知识点" class="headerlink" title="三.知识点"></a>三.知识点</h3><h4 id="1、输入和输出"><a href="#1、输入和输出" class="headerlink" title="1、输入和输出"></a>1、输入和输出</h4><ol>
<li>标准输出：print语句</li>
<li>标准输入：raw_input()内建函数</li>
</ol>
<h4 id="2、注释"><a href="#2、注释" class="headerlink" title="2、注释"></a>2、注释</h4><ol>
<li>单行注释：#</li>
<li>多行注释：三引号</li>
<li>中文注释：在文件头上写入：#coding=gbk或：#coding=utf-8<br>如果开头不声明保存编码格式，会默认使用ASCII码保存，那么代码中有中文就会有问题，即使你的中文是在注释里面。</li>
</ol>
<h4 id="3、操作符"><a href="#3、操作符" class="headerlink" title="3、操作符"></a>3、操作符</h4><ul>
<li><p>算术操作符</p>
<ol>
<li>加减乘除和取余：+ - * / %</li>
<li>传统除法和真正除法：/表示整型，//表示浮点</li>
<li>乘方：**<br>优先级：多的优先</li>
</ol>
</li>
<li><p>比较操作符</p>
<ol>
<li>大小等：&gt; &lt;  &gt;= &lt;=   ==  !=</li>
<li>根据值的真假返回布尔值</li>
</ol>
</li>
<li><p>逻辑运算符</p>
<ol>
<li>和或不：and or not</li>
<li>将表达式连接在一起，返回布尔值</li>
</ol>
</li>
</ul>
<h4 id="4、变量"><a href="#4、变量" class="headerlink" title="4、变量"></a>4、变量</h4><p> 字母开头的标识符</p>
<h4 id="5、数字类型"><a href="#5、数字类型" class="headerlink" title="5、数字类型"></a>5、数字类型</h4><h4 id="6、字符串"><a href="#6、字符串" class="headerlink" title="6、字符串"></a>6、字符串</h4><p>引号之间的字符集合</p>
<ol>
<li>获取子字符串：<code>[](索引操作符)、[:](切片操作符)</code></li>
<li>字符串连接运算：+</li>
<li>字符串重复运算：*</li>
</ol>
<h4 id="7、列表和元组"><a href="#7、列表和元组" class="headerlink" title="7、列表和元组"></a>7、列表和元组</h4><ol>
<li>列表：使用中括号[],可以修改</li>
<li>元组：使用小括号(),不可以修改</li>
</ol>
<h4 id="8、字典"><a href="#8、字典" class="headerlink" title="8、字典"></a>8、字典</h4><p>映射数据类型，有键值对构成，大括号表示｛｝</p>
<h4 id="9、if语句，while循环，for循环"><a href="#9、if语句，while循环，for循环" class="headerlink" title="9、if语句，while循环，for循环"></a>9、if语句，while循环，for循环</h4><h4 id="10、列表解析"><a href="#10、列表解析" class="headerlink" title="10、列表解析"></a>10、列表解析</h4><h4 id="11、文件"><a href="#11、文件" class="headerlink" title="11、文件"></a>11、文件</h4><h4 id="12、错误与-异常"><a href="#12、错误与-异常" class="headerlink" title="12、错误与 异常"></a>12、错误与 异常</h4>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;快速入门&quot;&gt;&lt;a href=&quot;#快速入门&quot; class=&quot;headerlink&quot; title=&quot;快速入门&quot;&gt;&lt;/a&gt;快速入门&lt;/h1&gt;&lt;h2 id=&quot;一-安装python环境&quot;&gt;&lt;a href=&quot;#一-安装python环境&quot; class=&quot;headerlink&quot; 
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
  </entry>
  
</feed>
